#!/usr/bin/with-contenv bash

### Set Defaults
LOG_LEVEL=${LOG_LEVEL:-"INFO"}
ENABLE_LDAP=${ENABLE_DOVECOT_LDAP:="FALSE"}
LOG_FILE=${LOG_FILE:-"/var/log/dovecot.log"}
LDAP_DEREF=${LDAP_DEFEF:-"never"}
LDAP_SCOPE=${LDAP_SCOPE:-"subtree"}
GREETING_TEXT=${GREETING_TEXT:-"Ready"}
LOG_PATH={$LOG_PATH:-"/var/log/dovecot.log"}
LOG_DEBUG_PATH={$LOG_DEBUG_PATH:-"/var/log/dovecot.debug.log"}
LOG_INFO_PATH={$LOG_INFO_PATH:-"/dev/stdout"}
LDAP_TLS_CRT_FILENAME=${LDAP_TLS_CRT_FILENAME:-"ldap.crt"}
LDAP_TLS_KEY_FILENAME=${LDAP_TLS_KEY_FILENAME:-"ldap.key"}
LDAP_TLS_CA_CRT=${LDAP_TLS_CA_CRT_FILENAME:-"ca.crt"}
SSL_CRT_FILENAME=${SSL_CRT_FILENAME:-"mail.crt"}
SSL_KEY_FILENAME=${SSL_KEY_FILENAME:-"mail.key"}


### Dovecot Configuration
	function setDovecotConf {
		KEY="$1"
		VALUE="$2"
		FILE="$3"
		echo "Setting conf: $KEY=$VALUE in ($FILE)"
		sed -i "s#^\s*$KEY\s*=.*\$#$KEY=$VALUE#g" $FILE
	}

    # Set Loglevel Dovecot Loglevel
	setDovecotConf "log_path" "$LOG_PATH" /etc/dovecot/dovecot.conf
	setDovecotConf "debug_log_path" "$LOG_DEBUG_PATH" /etc/dovecot/dovecot.conf
	setDovecotConf "info_log_path" "$LOG_INFO_PATH" /etc/dovecot/dovecot.conf

	# Set LDAP Host if Available
	if [ -n "$LDAP_HOST" ]; then
		setDovecotConf "hosts" "$LDAP_HOST" /etc/dovecot/dovecot.conf
	fi

    # Set LDAP conf: base (ex: base=dc=mail, dc=example, dc=org)
	if [ -n "$LDAP_BASE_DN" ]; then
		setDovecotConf "base" "$LDAP_BASE_DN" /etc/dovecot/dovecot.conf
	fi

    if [ -n "$LDAP_BIND_USER" ]; then
		setDovecotConf "dn" "$LDAP_BIND_USER" /etc/dovecot/dovecot.conf
	fi

    if [ -n "$LDAP_BIND_PASS" ]; then
		setDovecotConf "dnpass" "$LDAP_BIND_PASS" /etc/dovecot/dovecot.conf
	fi

    if [ "$LDAP_TLS" = "TRUE" ] || [ "$LDAP_TLS" = "true" ]; then
		setDovecotConf "tls" "yes" /etc/dovecot/dovecot.conf
	fi

    if [ -n "$LDAP_TLS_CA_CERT"]; then
		setDovecotConf "ca_cert_file" "$LDAP_TLS_CA_CERT" /etc/dovecot/dovecot.conf
	fi

    if [ -n "$LDAP_TLS_CA_DIR" ]; then
		setDovecotConf "ca_cert_dir" "$LDAP_TLS_CA_DIR" /etc/dovecot/dovecot.conf
	fi

    if [ -n "$LDAP_TLS_CIPHER" ]; then
		setDovecotConf "tls_cipher_suite" "$LDAP_TLS_CIPHER" /etc/dovecot/dovecot.conf
	fi

    if [ -n "$LDAP_TLS_CERT" ]; then
		setDovecotConf "tls_cert_file" "$LDAP_TLS_CERT" /etc/dovecot/dovecot.conf
	fi

    if [ -n "$LDAP_TLS_KEY" ]; then
		setDovecotConf "tls_key_file" "$LDAP_TLS_KEY" /etc/dovecot/dovecot.conf
	fi

    if [ -n "$LDAP_TLS_REQUIRE_CERT" ]; then
		setDovecotConf "tls_require_cert" "$LDAP_TLS_REQUIRE_CERT" /etc/dovecot/dovecot.conf
	fi

    if [ -n "$LDAP_TLS_CIPHER" ]; then
		setDovecotConf "tls_cipher_suite" "$LDAP_TLS_CIPHER" /etc/dovecot/dovecot.conf
	fi

    if [ -n "$LDAP_TLS_CIPHER" ]; then
		setDovecotConf "tls_cipher_suite" "$LDAP_TLS_CIPHER" /etc/dovecot/dovecot.conf
	fi

	if [ -n "$LDAP_DEBUG_LEVEL" ]; then
		setDovecotConf "debug_level" "$LDAP_DEBUG_LEVEL" /etc/dovecot/dovecot.conf
	fi

	if [ -n "$LDAP_USER_ATTRS" ]; then
		setDovecotConf "user_attr" "$LDAP_USER_ATTRS" /etc/dovecot/dovecot.conf
	fi

    if [ -n "$LDAP_USER_FILTER" ]; then
		setDovecotConf "user_filter" "($LDAP_USER_FIELD=%n)" /etc/dovecot/dovecot.conf
		setDovecotConf "pass_filter" "($LDAP_USER_FIELD=%n)" /etc/dovecot/dovecot.conf
	fi

    	# Set LDAP conf: pass_attrs (ex: pass_attrs = uid=user,userPassword=password)
	if [ -n "$LDAP_USER_FIELD" ]; then
		setDovecotConf "pass_attrs" "$LDAP_USER_FIELD=user" /etc/dovecot/dovecot.conf
	fi

    # Set Logfile Parameters
    	setDovecotConf "log_path" "$LOG_FILE" /etc/dovecot/dovecot.conf
##
## Logging verbosity and debugging.
##

# Log unsuccessful authentication attempts and the reasons why they failed.
#auth_verbose = no

# In case of password mismatches, log the attempted password. Valid values are
# no, plain and sha1. sha1 can be useful for detecting brute force password
# attempts vs. user simply trying the same password over and over again.
# You can also truncate the value to n chars by appending ":n" (e.g. sha1:6).
#auth_verbose_passwords = no

# Even more verbose logging for debugging purposes. Shows for example SQL
# queries.
#auth_debug = no

# In case of password mismatches, log the passwords and used scheme so the
# problem can be debugged. Enabling this also enables auth_debug.
#auth_debug_passwords = no

# Enable mail process debugging. This can help you figure out why Dovecot
# isn't finding your mails.
#mail_debug = no


    # Set Greeting
    setDovecotConf "login_greeting" "$GREETING_TEXT" /etc/dovecot/dovecot.conf
	
	## SSL Configuration


	if [ ! -f $SSL_CRT_FILENAME ] || [ ! -f SSL_KEY_FILENAME ]; then
	    echo "** [dovecot] SSL Key or certificate not found. Generating self-signed certificates"
		mkdir -p /assets/certs
	    openssl genrsa -out /assets/certs/$SSL_KEY_FILENAME
	    openssl req -new -key /assets/certs/$SSL_KEY_FILENAME -out /assets/certs/${SSL_CRT_FILENAME%.*}.csr -subj "/CN=dovecot"
	    openssl x509 -req -days 3650 -in /assets/certs/${SSL_CRT_FILENAME%.*}.csr -signkey /assets/certs/$SSL_KEY_FILENAME -out /assets/certs/$SSL_CRT_FILENAME
	fi

	setDovecotConf "ssl_cert" "</assets/certs/$SSL_KEY_FILENAME" /etc/dovecot/dovecot.conf
	setDovecotConf "ssl_key" "</assets/certs/$SSL_CRT_FILENAME" /etc/dovecot/dovecot.conf

    if [ ! -f "/assets/certs/server.pem" ] || [ ! -f "/assets/certs/server.pem" ]; then	        
	 	    
	 	    cat <<EOF > /tmp/openssl.cnf
[ req ]
default_bits = 1024
encrypt_key = yes
distinguished_name = req_dn
x509_extensions = cert_type
prompt = no

[ req_dn ]
# country (2 letter code)
C=XX

# State or Province Name (full name)
ST=XX

# Locality Name (eg. city)
L=Test Server

# Organization (eg. company)
O=Dovecot

# Organizational Unit Name (eg. section)
OU=IMAP server

# Common Name (*.example.com is also possible)
CN=imap.example.com

# E-mail contact
emailAddress=postmaster@example.com

[ cert_type ]
nsCertType = server	 	
EOF

	 	openssl req -new -x509 -nodes -days 365 \
	                -config /tmp/openssl.cnf \
	                -out /assets/certs/server.pem \
	                -keyout /assets/certs/server.key
	 	chmod 0600 /assets/certs/server.key
	    rm -rf /tmp/openssl.cnf
fi

	if [ ! -f "/assets/certs/dhparams.pem" ]; then
	    echo '** [dovecot] No Diffie Hellman Parameters Found. Generating, please wait..'
		openssl gendh -out assets/certs/dhparam.pem 4096
    fi




mkdir -p /tmp/state
touch /tmp/state/10-dovecot-init