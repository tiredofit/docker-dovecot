#!/usr/bin/with-contenv bash

for s in /assets/functions/*; do source $s; done
PROCESS_NAME="dovecot"


#### Create Vmail Dir
if [ ! -d "/var/vmail" ]; then
	mkdir -p /var/vmail
fi
chown -R vmail:vmail /var/vmail

#### Set Permissions
chown -R vmail:vmail /etc/dovecot/sieve
chmox +x /etc/dovecot/sieve/bin/*

#### Set Hostname
setDovecotConf "hostname" "$HOSTNAME" /etc/dovecot/dovecot.conf
setDovecotConf "postmaster_address" "$POSTMASTER" /etc/dovecot/dovecot.conf

#### Set Greeting
setDovecotConf "login_greeting" "$GREETING_TEXT" /etc/dovecot/dovecot.conf
	
#### Set Loglevel Dovecot Loglevel
setDovecotConf "log_path" "$LOG_PATH" /etc/dovecot/dovecot.conf
setDovecotConf "debug_log_path" "$LOG_DEBUG_PATH" /etc/dovecot/dovecot.conf
setDovecotConf "info_log_path" "$LOG_INFO_PATH" /etc/dovecot/dovecot.conf

#### Auth Type Setup
case "$AUTH_TYPE" in
	"MSYQL" | "mysql")
		print_debug "Using MariaDB as backend"
		DB_PORT=${DB_PORT:-"3306"}
		##### Check MySQL Connectivity			
	    db_ready mariadb
			##### Update Dovecot SQL Configuration
		cat <<EOF > /etc/dovecot/dovecot-sql.conf
driver = mysql
connect = host=$DB_HOST port=$DB_PORT dbname=$DB_NAME user=$DB_USER password=$DB_PASS
default_pass_scheme = $PASS_SCHEME
password_query = SELECT CONCAT(name, '@', '%d') AS user, password as password, home as userdb_home, 8 AS userdb_uid, 8 AS userdb_gid FROM users WHERE name = '%n' AND domain = '%d'
user_query = SELECT home, 8 AS uid, 8 AS gid, concat('*:storage=', quota, 'M') AS quota_rule FROM users WHERE name = '%n' AND domain = '%d'
EOF

		sed -i -e "/connect = /c\connect = host=$DB_HOST port=$DB_PORT dbname=$DB_NAME user=$DB_USER password=$DB_PASS" /etc/dovecot/pigeonhole-sieve.dict

		##### Check to see if Table Exists
	    if [ $(mysql -N -s -u $DB_USER -p$DB_PASS -P$DB_PORT -h $DB_HOST -e "select count(*) from information_schema.tables where table_schema='${DB_NAME}' and table_name='expires';") -eq 1 ]; then
	        print_debug "MariaDB Config Database Tables Exist"
	    else
		    print_notice "No MariaDB Config Database Tables exist! Creating.."
		    mysql -u$DB_USER -h$DB_HOST -p$DB_PASS -p$DB_PORT $DB_NAME</assets/dovecot/sql/schema.sql
		    print_warn "Database Configured to '${DB_HOST}/${DB_NAME}'"
		fi

		sed -i -e 's/##changeme##/sql/g' /etc/dovecot/dovecot.conf
	  ;;
  "SQLITE" | "sqlite" | "SQLITE3" | "sqlite3")
		print_debug "Using sqlite3 as backend"
        mkdir -p /data/ 
		cat <<EOF > /etc/dovecot/dovecot-sql.conf
driver = sqlite
connect = /data/auth.db
password_query = SELECT password FROM user WHERE user.email = '%u'
user_query = SELECT '*:bytes=' || user.quota_bytes AS quota_rule FROM user WHERE user.email = '%u'
EOF
		sed -i -e 's/##changeme##/sql/g' /etc/dovecot/dovecot.conf
	  ;;
#	"PGSQL" | "pgsql" | "postgres" | "POSTGRES" | "postgresql" | "POSTGRESQL")
#		DB_PORT=${DB_PORT:-"5432"}
#
#		##### Check PgSQL Connectivity			
#	    db_ready postgres
#
#		cat <<EOF > /etc/dovecot/dovecot-sql.conf
#driver = postgresql
#connect = host=$DB_HOST port=$DB_PORT dbname=$DB_NAME user=$DB_USER password=$DB_PASS
#default_pass_scheme = $PASS_SCHEME
#password_query = SELECT CONCAT(name, '@', '%d') AS user, password as password, home as userdb_home, 8 AS userdb_uid, 8 AS userdb_gid FROM users WHERE name = '%n' AND domain = '%d'
#user_query = SELECT home, 8 AS uid, 8 AS gid, concat('*:storage=', quota, 'M') AS quota_rule FROM users WHERE name = '%n' AND domain = '%d'
#EOF

#		sed -i -e "/connect = /c\connect = host=$DB_HOST port=$DB_PORT dbname=$DB_NAME user=$DB_USER password=$DB_PASS" /etc/dovecot/pigeonhole-sieve.dict
#
#	##### Check to see if Table Exists
#	    if [ $(mysql -N -s -u $DB_USER -p$DB_PASS -h $DB_HOST -e "select count(*) from information_schema.tables where table_schema='${DB_NAME}' and table_name='expires';") -eq 1 ]; then
#	        echo "** [dovecot] PgSQL Config Database Tables exist"
#	    else
#		    echo "** [dovecot] No PgSQL Config Database Tables exist! Creating.."
#		    pgsql --username=$DB_USER -h-host=$DB_HOST --password=$DB_PASS --dnname=$DB_NAME</assets/dovecot/sql/schema.sql
#		    echo '** [dovecot] Database Configured to '$DB_HOST'/'$DB_NAME    
#	    fi
#
#		    sed -i -e 's/##changeme##/sql/g' /etc/dovecot/dovecot.conf
#   	;;
  "LDAP" | "ldap")
		print_debug "Using LDAP as backend"
		LDAP_PORT=${LDAP_PORT:-"389"}

		if [ -n "$LDAP_HOST" ]; then
			setDovecotConf "hosts" "$LDAP_HOST" /etc/dovecot/dovecot-ldap.conf
		fi

		if [ -n "$LDAP_BASE_DN" ]; then
			setDovecotConf "base" "$LDAP_BASE_DN" /etc/dovecot/dovecot-ldap.conf
		fi

	    if [ -n "$LDAP_BIND_USER" ]; then
			setDovecotConf "dn" "$LDAP_BIND_USER" /etc/dovecot/dovecot-ldap.conf
		fi

	    if [ -n "$LDAP_BIND_PASS" ]; then
			setDovecotConf "dnpass" "$LDAP_BIND_PASS" /etc/dovecot/dovecot-ldap.conf
		fi

	    if [ "$LDAP_TLS" = "TRUE" ] || [ "$LDAP_TLS" = "true" ]; then
			setDovecotConf "tls" "yes" /etc/dovecot/dovecot-ldap.conf
		fi

	    if [ -n "$LDAP_TLS_CA_CERT"]; then
			setDovecotConf "ca_cert_file" "$LDAP_TLS_CA_CERT" /etc/dovecot/dovecot-ldap.conf
		fi

	    if [ -n "$LDAP_TLS_CA_DIR" ]; then
			setDovecotConf "ca_cert_dir" "$LDAP_TLS_CA_DIR" /etc/dovecot/dovecot-ldap.conf
		fi

	    if [ -n "$LDAP_TLS_CIPHER" ]; then
			setDovecotConf "tls_cipher_suite" "$LDAP_TLS_CIPHER" /etc/dovecot/dovecot-ldap.conf
		fi

	    if [ -n "$LDAP_TLS_CERT" ]; then
			setDovecotConf "tls_cert_file" "$LDAP_TLS_CERT" /etc/dovecot/dovecot-ldap.conf
		fi

	    if [ -n "$LDAP_TLS_KEY" ]; then
			setDovecotConf "tls_key_file" "$LDAP_TLS_KEY" /etc/dovecot/dovecot-ldap.conf
		fi

	    if [ -n "$LDAP_TLS_REQUIRE_CERT" ]; then
			setDovecotConf "tls_require_cert" "$LDAP_TLS_REQUIRE_CERT" /etc/dovecot/dovecot-ldap.conf
		fi

	    if [ -n "$LDAP_TLS_CIPHER" ]; then
			setDovecotConf "tls_cipher_suite" "$LDAP_TLS_CIPHER" /etc/dovecot/dovecot-ldap.conf
		fi

		if [ -n "$LDAP_DEBUG_LEVEL" ]; then
			setDovecotConf "debug_level" "$LDAP_DEBUG_LEVEL" /etc/dovecot/dovecot-ldap.conf
		fi

		if [ -n "$LDAP_USER_ATTRS" ]; then
			setDovecotConf "user_attr" "$LDAP_USER_ATTRS" /etc/dovecot/dovecot-ldap.conf
		fi

	    if [ -n "$LDAP_USER_FILTER" ]; then
			setDovecotConf "user_filter" "($LDAP_USER_FIELD=%n)" /etc/dovecot/dovecot-ldap.conf
			setDovecotConf "pass_filter" "($LDAP_USER_FIELD=%n)" /etc/dovecot/dovecot-ldap.conf
		fi

    	# Set LDAP conf: pass_attrs (ex: pass_attrs = uid=user,userPassword=password)
		if [ -n "$LDAP_USER_FIELD" ]; then
			setDovecotConf "pass_attrs" "$LDAP_USER_FIELD=user" /etc/dovecot/dovecot-ldap.conf
		fi

		sed -i -e 's/##changeme##/ldap/g' /etc/dovecot/dovecot.conf
	    ;;
    esac

### SSL Configuration
if [ ! -f /assets/certs/$SSL_CRT_FILENAME ] || [ ! -f /assets/certs/$SSL_KEY_FILENAME ]; then
    print_warn "SSL Key or certificate not found. Generating self-signed certificates"
	mkdir -p /assets/certs
    openssl genrsa -out /assets/certs/$SSL_KEY_FILENAME
    openssl req -new -key /assets/certs/$SSL_KEY_FILENAME -out /assets/certs/${SSL_CRT_FILENAME%.*}.csr -subj "/CN=dovecot"
    openssl x509 -req -days 3650 -in /assets/certs/${SSL_CRT_FILENAME%.*}.csr -signkey /assets/certs/$SSL_KEY_FILENAME -out /assets/certs/$SSL_CRT_FILENAME
fi

setDovecotConf "ssl_cert" "</assets/certs/$SSL_CRT_FILENAME" /etc/dovecot/dovecot.conf
setDovecotConf "ssl_key" "</assets/certs/$SSL_KEY_FILENAME" /etc/dovecot/dovecot.conf

if [ ! -f "/assets/certs/server.pem" ] || [ ! -f "/assets/certs/server.key" ]; then	        
    cat <<EOF > /tmp/openssl.cnf
[ req ]
default_bits = 1024
encrypt_key = yes
distinguished_name = req_dn
x509_extensions = cert_type
prompt = no

[ req_dn ]
# country (2 letter code)
C=XX

# State or Province Name (full name)
ST=XX

# Locality Name (eg. city)
L=Test Server

# Organization (eg. company)
O=Dovecot

# Organizational Unit Name (eg. section)
OU=IMAP server

# Common Name (*.example.com is also possible)
CN=imap.example.com

# E-mail contact
emailAddress=postmaster@example.com

[ cert_type ]
nsCertType = server	 	
EOF

 	openssl req -new -x509 -nodes -days 365 \
                -config /tmp/openssl.cnf \
                -out /assets/certs/server.pem \
                -keyout /assets/certs/server.key
 	chmod 0600 /assets/certs/server.key
    rm -rf /tmp/openssl.cnf
fi

liftoff